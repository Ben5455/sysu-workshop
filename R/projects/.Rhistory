install.packages("randomForest")
plot(cars)
1+1
max(1,3,5)
help(max)
example(max)
cars
curve(sin)
curve(sin,from = -10,to = 10)
curve(sin,from = -10,to = 10,type = "*")
curve(sin,from = -10,to = 10,type = "-")
curve(sin,from = -10,to = 10,type = "b")
df <- read.csv("data/students.csv")
View(df)
str(df)
df <- read.csv("students.csv")
7/2.5
1 + 1
333 * 5666
333 * 5666
333 * 5666
1 + 1
333 * 5666
print("hehe")
print("hehe")
1 + 1
333 * 5666
print("hehe")
1 + 1
333 * 5666
print("hehe")
1 + 1
333 * 5666
# print("hehe")
1 + 1
333 * 5666
print("hehe")
# 1 + 1
# 333 * 5666
# print("hehe")
1+1
1:1000
1:1000
max(1,3,5)
q()
help(max)
min(5:1, pi) #-> one number
pi
example(max)
x = 1
x = 1
x <- 1
x <- 3
X <- 44
x <- 3
y <- 4
z <- sqrt(x^2+y^2)
z
x <- "geography"
print(x)
Y <- geography
ls()
ls.str()
c(1,3,5,7)
c(1:100)
c("a","b","c")
c(TRUE,FALSE,TRUE)
true
v1 <- c(1,3,5)
v2 <- c(2,4,6)
v3 <- c(v1,v2)
v3
mode(v1)
num <- 1:10
num
mean(num)
median(num)
sd(num)
var(num)
num <- 1:=10010
num
mean(num)
median(num)
sd(num)
var(num)
num <- 1:10010
num
mean(num)
median(num)
sd(num)
var(num)
library("datasets", lib.loc="C:/Program Files/R/R-3.4.0/library")
df <- cars
View(df)
str(df)
summary(df)
View(df)
fix(df)
fix(df)
plot(df$speed,df$dist)
df$speed
df$dist
df[1,1]
df[10,2]
df[5,]
df[,2]
df[c(1,3,5,7),]
seq(from = 1, to = 999,by = 2)
seq(1,999,2)
seq(1,999,5)
df[seq(1,50,2),]
df[seq(1,50,3),]
seq(1,1000,2)
seq(1,1000,length.out = 300)
library("leaflet", lib.loc="~/R/win-library/3.4")
detach("package:leaflet", unload=TRUE)
library(leaflet)
library(leaflet)
pal <- colorQuantile("YlOrRd", NULL, n = 8)
leaflet(orstationc) %>%
addTiles() %>%
addCircleMarkers(color = ~pal(tann))
library(leaflet)
pal <- colorQuantile("YlOrRd", NULL, n = 8)
leaflet(pal) %>%
addTiles() %>%
addCircleMarkers(color = ~pal(tann))
library(networkD3)
data(MisLinks, MisNodes)
forceNetwork(Links = MisLinks, Nodes = MisNodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
Group = "group", opacity = 0.4)
install.packages("networkD3")
library(networkD3)
data(MisLinks, MisNodes)
forceNetwork(Links = MisLinks, Nodes = MisNodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
Group = "group", opacity = 0.4)
library(ggplot2)
library(plotly)
p <- ggplot(data = diamonds, aes(x = cut, fill = clarity)) +
geom_bar(position = "dodge")
ggplotly(p)
plot(cars)
plot(cars)
plot(cars,type = "b")
v1 <- c(1,3,5)
v2 <- c(2,4,6)
v3 <- c(v1,v2)
v3
library(networkD3)
data(MisLinks, MisNodes)
forceNetwork(Links = MisLinks, Nodes = MisNodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
Group = "group", opacity = 0.4)
library(ggplot2)
library(plotly)
p <- ggplot(data = diamonds, aes(x = cut, fill = clarity)) +
geom_bar(position = "dodge")
ggplotly(p)
library(ggplot2)
library(plotly)
p <- ggplot(data = diamonds, aes(x = cut, fill = clarity)) +
geom_bar(position = "dodge")
ggplotly(p)
plot(cars,type = "b")
v1 <- c(1,3,5)
v2 <- c(2,4,6)
v3 <- c(v1,v2)
v3
library(networkD3)
data(MisLinks, MisNodes)
forceNetwork(Links = MisLinks, Nodes = MisNodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
Group = "group", opacity = 0.4)
library(ggplot2)
library(plotly)
p <- ggplot(data = diamonds, aes(x = cut, fill = clarity)) +
geom_bar(position = "dodge")
ggplotly(p)
df <- read.csv("students.csv")
df <- read.csv("students.csv")
View(df)
View(df)
str(df)
df$Last.Name
df$Last.Name <- as.character(df$Last.Name)
df$First.Name <- as.character(df$First.Name)
str(df)
df <- read.csv("students.csv",stringsAsFactors = FALSE)
str(df)
install.packages("fBasics")
library(fBasics)
df <- read.csv("students.csv")
SAT <- df$SAT
basicStats(SAT)
summary(SAT)
hist(SAT)
hist(df$SAT,main = "Histogram of SAT Score",xlab = "SAT Score",ylab = "Frequency",col="green")
hist(df$SAT,main = "Histogram of SAT Score",xlab = "SAT Score",ylab = "Frequency",col="BLUE")
df <- read.csv("students.csv")
SAT.mean <- tapply(df$SAT, df$Gender, mean)
print(SAT.mean)
SAT.median <- tapply(df$SAT, df$Gender, median)
print(SAT.median)
SAT.sd <- tapply(df$SAT, df$Gender, sd)
print(SAT.sd)
round(cbind(SAT.mean,SAT.median,SAT.sd,SAT.max),digits = 1)
t1 <- round(cbind(SAT.mean,SAT.median,SAT.sd,SAT.max),digits = 1)
write.csv(df,file = "newstudent.csv")
df$NEWSAT <- df$SAT / 2
View(df)
write.csv(df,file = "newstudent.csv")
write.csv(df,file = "newstudent.csv")
